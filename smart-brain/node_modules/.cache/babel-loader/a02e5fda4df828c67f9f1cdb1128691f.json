{"ast":null,"code":"var _jsxFileName = \"/home/pedro/git/WebDevCourse/face_recognition_app/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: 'a11480e0467a417293d6064eb1b23749'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n        this.setState({\n          imageUrl: ''\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3001/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(response);\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: 'cookies',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      params: particlesOptions,\n      className: \"particles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: imageUrl,\n      box: box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pedro/git/WebDevCourse/face_recognition_app/smart-brain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIn","Register","Clarifai","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","password","entries","joined","onRouteChange","route","isSignedIn","imageUrl","displayFaceBox","box","onInputChange","event","input","target","onSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport SignIn from './components/SignIn/SignIn'\nimport Register from './components/Register/Register'\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Particles from 'react-particles-js';\n\nconst app = new Clarifai.App({\n  apiKey: 'a11480e0467a417293d6064eb1b23749'\n });\n \n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id:'',\n        name: '',\n        email: '',\n        password: 'cookies',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id:data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3001')\n      .then(response => response.json())\n      .then(console.log)\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState({isSignedIn: false})\n      this.setState({imageUrl: ''})\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3001/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count }))\n        })\n      }\n      this.displayFaceBox(response)\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles params={particlesOptions} className='particles'/>\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onSubmit={this.onSubmit}\n              />\n              <FaceRecognition imageUrl={imageUrl} box = {box}/>\n            </div>\n          : (\n            route === 'signin' \n            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}